{
    "version": "https://jsonfeed.org/version/1",
    "title": "Promise是恁爹",
    "subtitle": "前端萌新",
    "icon": "https://promisemey.github.io/images/favicon.ico",
    "description": "",
    "home_page_url": "https://promisemey.github.io",
    "items": [
        {
            "id": "https://promisemey.github.io/2022/10/06/Git/git/",
            "url": "https://promisemey.github.io/2022/10/06/Git/git/",
            "title": "Git的基本操作",
            "date_published": "2022-10-06T06:18:45.000Z",
            "content_html": "<h1 id=\"git\"><a class=\"anchor\" href=\"#git\">#</a> GIT</h1>\n<h2 id=\"一-git特性\"><a class=\"anchor\" href=\"#一-git特性\">#</a> 一、git 特性</h2>\n<ol>\n<li>\n<p>直接记录快照，而非差异比较</p>\n<ul>\n<li>git 快照：在原有文件版本的基础之上重新生成一份新的文件 (备份)</li>\n<li>效率：未做修改的文件则不会重新存储，而是保留一个链接指向之前存储的文件</li>\n</ul>\n<blockquote>\n<p><strong>缺点：</strong> 占用磁盘空间较大</p>\n<p><strong>优点：</strong> 版本切换时非常快，因为每个版本都是完整的文件快照</p>\n</blockquote>\n</li>\n<li>\n<p>近乎所有操作都是本地执行</p>\n<blockquote>\n<p><strong>特性：</strong></p>\n<ol>\n<li>\n<p>断网后依旧可以在本地进行版本控制</p>\n</li>\n<li>\n<p>联网后，将本地记录同步到云端服务器即可</p>\n</li>\n</ol>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"二-git中的三个区域\"><a class=\"anchor\" href=\"#二-git中的三个区域\">#</a> 二、git 中的三个区域</h2>\n<ol>\n<li>工作区</li>\n<li>暂存区</li>\n<li>git 仓库</li>\n</ol>\n<h2 id=\"三-三种状态\"><a class=\"anchor\" href=\"#三-三种状态\">#</a> 三、三种状态</h2>\n<ol>\n<li>已修改 (modified)\n<ul>\n<li>表示已经修改了文件，但是还没有将修改结果放入暂存区</li>\n</ul>\n</li>\n<li>已暂存 (staged)\n<ul>\n<li>表示对已修改文件的当前版本做了标记，使之包含于下次提交的列表中</li>\n</ul>\n</li>\n<li>已提交 (committed)\n<ul>\n<li>表示当前文件已经保存在本地的 git 仓库中</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"四-配置\"><a class=\"anchor\" href=\"#四-配置\">#</a> 四、配置</h2>\n<h3 id=\"1-配置用户信息\"><a class=\"anchor\" href=\"#1-配置用户信息\">#</a> 1. 配置用户信息</h3>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 配置用户名</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>git config <span class=\"token operator\">--</span>global user<span class=\"token punctuation\">.</span>name <span class=\"token string\">\"用户名\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 配置用户邮箱地址</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>git config <span class=\"token operator\">--</span>global user<span class=\"token punctuation\">.</span>email “邮箱”</pre></td></tr></table></figure><h3 id=\"2-git的全局配置文件\"><a class=\"anchor\" href=\"#2-git的全局配置文件\">#</a> 2. Git 的全局配置文件</h3>\n<ul>\n<li>文件地址：<span class=\"exturl\" data-url=\"YzovdXNlcnMvJUU3JTk0JUE4JUU2JTg4JUI3JUU1JTkwJThELy5naXRjb25maWc=\">git 全局配置文件</span></li>\n</ul>\n<h3 id=\"3检查配置信息\"><a class=\"anchor\" href=\"#3检查配置信息\">#</a> 3. 检查配置信息</h3>\n<figure class=\"highlight nginx\"><figcaption data-lang=\"nginx\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 查看所有的全局配置</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>git config --list --global</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 查看指定的全局配置</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>git config user.name</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>git config user.email</pre></td></tr></table></figure><h3 id=\"4帮助信息\"><a class=\"anchor\" href=\"#4帮助信息\">#</a> 4. 帮助信息</h3>\n<figure class=\"highlight nginx\"><figcaption data-lang=\"nginx\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 查看 config 的帮助信息</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>git help config</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 终端展示</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>git config -h</pre></td></tr></table></figure><h2 id=\"五-git基本操作\"><a class=\"anchor\" href=\"#五-git基本操作\">#</a> 五、GIT 基本操作</h2>\n<h3 id=\"1获取git仓库的两种方式\"><a class=\"anchor\" href=\"#1获取git仓库的两种方式\">#</a> 1. 获取 Git 仓库的两种方式</h3>\n<ul>\n<li>将未进行版本版本控制的本地目录转换为 Git 仓库</li>\n<li>从其他服务器克隆一个已经存在的 Git 仓库</li>\n</ul>\n<h3 id=\"2初始化仓库\"><a class=\"anchor\" href=\"#2初始化仓库\">#</a> 2. 初始化仓库</h3>\n<ul>\n<li>在当前文件夹下右键点击 <code>Git bash</code></li>\n<li>输入 <code>git init</code>  初始化仓库</li>\n</ul>\n<h3 id=\"3检查文件状态\"><a class=\"anchor\" href=\"#3检查文件状态\">#</a> 3. 检查文件状态</h3>\n<blockquote>\n<p>文件状态</p>\n<ol>\n<li>Untracked files （未被跟踪的）</li>\n</ol>\n<p><img data-src=\"C:%5CUsers%5C26366%5CDesktop%5Cgit%5Cimg%5C%E7%8A%B6%E6%80%81.png\" alt=\"未跟踪\" /></p>\n<ol start=\"2\">\n<li>Changes to be committed（已被跟踪，并处于暂存状态）</li>\n</ol>\n<p><img data-src=\"C:%5CUsers%5C26366%5CDesktop%5Cgit%5Cimg%5C%E7%8A%B6%E6%80%812.png\" alt=\"暂存状态\" /></p>\n<ol start=\"3\">\n<li>modified（文件已被修改，暂未放入暂存区）</li>\n</ol>\n<p><img data-src=\"C:%5CUsers%5C26366%5CDesktop%5Cgit%5Cimg%5C%E7%8A%B6%E6%80%813.png\" alt=\"已修改\" /></p>\n<ol start=\"3\">\n<li>double  modified</li>\n</ol>\n<p><img data-src=\"C:%5CUsers%5C26366%5CDesktop%5Cgit%5Cimg%5C%E7%8A%B6%E6%80%814.png\" alt=\"再次修改\" /></p>\n</blockquote>\n<figure class=\"highlight nginx\"><figcaption data-lang=\"nginx\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 1. 查看文件处于什么状态</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>git status</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 精简模式  </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>git status -s</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>git status --short</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>??  代表未被跟踪</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 2. 跟踪新文件</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>git add 文件名</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>A  代表已被跟踪，并处于暂存状态</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 3. 提交文件</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>git commit -m \"新建了....\"</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 4. 修改文件</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>M(红色)  文件已修改，但未被放入暂存区</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>M(绿色)  文件已修改，且已放入暂存区</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>M(绿色)M(红色)  放入暂存区后，文件再次修改，并且为放入暂存区</pre></td></tr></table></figure><h3 id=\"4基础命令\"><a class=\"anchor\" href=\"#4基础命令\">#</a> 4. 基础命令</h3>\n<ol>\n<li>\n<p>撤销修改</p>\n<ul>\n<li><code>git checkout -- 目标文件</code></li>\n</ul>\n</li>\n<li>\n<p>添加多个</p>\n<ul>\n<li><code>git add .</code></li>\n</ul>\n</li>\n<li>\n<p>移除暂存区中的文件</p>\n<ul>\n<li><code>git reset HEAD 目标文件</code></li>\n<li><code>git reset HEAD .</code>  移除所有暂存区中文件</li>\n</ul>\n</li>\n<li>\n<p>跳过使用暂存区</p>\n<ul>\n<li><code>git commit -a -m &quot;描述信息&quot;</code></li>\n<li>自动把所有跟踪过的文件暂存起来一并提交</li>\n</ul>\n</li>\n<li>\n<p>移除文件</p>\n<figure class=\"highlight nginx\"><figcaption data-lang=\"nginx\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 仓库和工作区同时移除</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>git rm -f 目标文件</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 只移除仓库中的文件</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>git rm --cached 目标文件</pre></td></tr></table></figure></li>\n<li>\n<p>忽略文件</p>\n<ul>\n<li><code>.gitignore</code></li>\n</ul>\n<figure class=\"highlight nginx\"><figcaption data-lang=\"nginx\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 规范</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 开头是注释</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>/ 结尾是目录</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>/ 开头防止递归</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>! 开头表示取反</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>glob模式</pre></td></tr></table></figure><p><img data-src=\"C:%5CUsers%5C26366%5CDesktop%5Cgit%5Cimg%5Cglob.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>查看提交历史</p>\n<figure class=\"highlight nginx\"><figcaption data-lang=\"nginx\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 时间先后所有提交历史，最近的在上</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>git log</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 展示 n 条</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>git log -n</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 一行上面显示最近 2 条</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>git log -2 --pretty=oneline</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 自定义输出格式</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># % h 提交的简写哈希值</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># % an 作者名字</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># % ar 作者修订日期</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># % s 提交说明</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>git log -2 --pretty=format:\"%h | %an | %ar | %s\"</pre></td></tr></table></figure></li>\n<li>\n<p>会退到指定版本</p>\n<figure class=\"highlight nginx\"><figcaption data-lang=\"nginx\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 一行打印所有提交历史</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>git log  --pretty=oneline</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 使用 git reset --hard 命令，根据指定的 id 回退指定版本</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>git reset --hard &lt;commitID></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 旧版本中使用 reflog  查看历史</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>git reflog --pretty=oneline</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 切换版本</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>git reset --hard &lt;commitID></pre></td></tr></table></figure></li>\n<li>\n<p>克隆项目</p>\n<figure class=\"highlight nginx\"><figcaption data-lang=\"nginx\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 克隆远程项目</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>git clone 仓库地址</pre></td></tr></table></figure></li>\n<li>\n<p>分支</p>\n<figure class=\"highlight nginx\"><figcaption data-lang=\"nginx\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>1.master 主分支</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>作用: 用来保存和记录整个项目已完成的功能代码</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>2.功能分支</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>3.查看分支列表</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>git branch</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>4.创建分支</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>git branch 名字</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>5.切换分支</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>git checkout 分支名</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>6.快速创建并切换</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># -b 表示创建一个新分支</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>git checkout -b 分支名称</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>7.合并分支</pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"切换到master分支\"><a class=\"anchor\" href=\"#切换到master分支\">#</a> 切换到 master 分支</h1>\n<pre><code>git checkout master\n# 将代码合并到master分支\ngit merge login\n8.删除分支\ngit branch -d 分支名称\n9.不同分支对同一文件做出修改，产生合并冲突\n手动解决，重新提交\n```\n\n![](C:\\Users\\26366\\Desktop\\git\\img\\合并冲突.png)\n</code></pre>\n<ol start=\"11\">\n<li>\n<p>推送</p>\n<pre><code class=\"language-ng\">第一次将本地分支推送到远程仓库\n# -u 表示把本地分支和远程分支进行关联\n# 只有第一次推送需要带 -u 参数\ngit push -u 远程仓库别名 本地分支名称:远程分支名称\n如果希望本地分支和远程分支名称保持一致\ngit push -u origin 名称\n查看远程仓库所有分支信息\ngit remote show origin\n\n# 将远程仓库下载到本地仓库\ngit checkout 远程分支名称\n# 从远程仓库中，把对应的远程分支下载到本地仓库，并把下载的本地分支进行重命名\ngit checkout -b 本地分支名称 远程仓库/远程分支\ngit checkout -b master origin/main\n\n# 拉取远程分支最新代码\ngit pull\n\n# 删除远程分支\ngit push 远程仓库名 --delete 远程分支名\n\n# 查看远程分支\ngit branch -r\ngit branch -a\n\n# 从远程获取代码库\ngit fetch\n</code></pre>\n<blockquote>\n<p><strong>git remote add origin ssh</strong> 链接远程仓库</p>\n</blockquote>\n</li>\n</ol>\n",
            "tags": [
                "Git",
                "Git的基本使用",
                "Git"
            ]
        },
        {
            "id": "https://promisemey.github.io/2022/10/06/HTML/%E5%AD%97%E4%BD%93%E6%96%87%E4%BB%B6%E5%8F%8A%E5%A4%9A%E5%88%97%E5%B8%83%E5%B1%80/",
            "url": "https://promisemey.github.io/2022/10/06/HTML/%E5%AD%97%E4%BD%93%E6%96%87%E4%BB%B6%E5%8F%8A%E5%A4%9A%E5%88%97%E5%B8%83%E5%B1%80/",
            "title": "字体文件",
            "date_published": "2022-10-06T06:09:42.000Z",
            "content_html": "<h2 id=\"自定义字体文件\"><a class=\"anchor\" href=\"#自定义字体文件\">#</a> 自定义字体文件</h2>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>/* 引入自定义字体 */       </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>@font-face &#123;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    font-family: fof;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    src: url(../font/方正流行体_GBK.TTF);</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>* &#123;</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    font-family: fof;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>&#125;</pre></td></tr></table></figure><h2 id=\"多列布局\"><a class=\"anchor\" href=\"#多列布局\">#</a> 多列布局</h2>\n<blockquote>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">div</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token comment\">/* 分为几列 */</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token comment\">/* column-count: 3; */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token comment\">/* 列与列之间的边距 */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token property\">column-gap</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token comment\">/* 列与列之间的边框 */</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token comment\">/* column-rule: 2px solid pink; */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token comment\">/* 列宽 */</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token property\">column-width</span><span class=\"token punctuation\">:</span> 300px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token comment\">/* all 全部列 */</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token comment\">/* column-span: all; */</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></blockquote>\n<blockquote>\n<p><code>break-inside: avoid;</code>  解决多列布局内容盒子中断问题</p>\n</blockquote>\n<h2 id=\"ifarme\"><a class=\"anchor\" href=\"#ifarme\">#</a> ifarme</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>box<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>nav<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>./03字体.html<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>url<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>字体<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>./04ali.html<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>url<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>阿里<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>./05多列布局.html<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>url<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>多列布局<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>./06多列布局2.html<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>url<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>瀑布流<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>iframe</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">frameborder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>url<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>iframe</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p><img data-src=\"C:%5CUsers%5C26366%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1663760885063.png\" alt=\"1663760885063\" /></p>\n<h2 id=\"bfc\"><a class=\"anchor\" href=\"#bfc\">#</a> BFC</h2>\n<blockquote>\n<p><strong>定义:</strong> 块级格式化上下文，页面里一块独立渲染的区域，有自己独立的渲染规则</p>\n</blockquote>\n<h2 id=\"多媒体资源\"><a class=\"anchor\" href=\"#多媒体资源\">#</a> 多媒体资源</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    controls 控件</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    muted 静音</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    loop 循环</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    poster 封面</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    autoplay 自动播放</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> --></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>video</span> <span class=\"token attr-name\">controls</span> <span class=\"token attr-name\">muted</span> <span class=\"token attr-name\">loop</span> <span class=\"token attr-name\">poster</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>../img/86.png<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">&lt;!-- 资源兼容 --></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>source</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>../video/3theA.mp4<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>video/mp4<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">&lt;!-- &lt;source src=\"../video/\" type=\"video/webm\"></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    &lt;source src=\"../video/\" type=\"video/ogg\"> --></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>video</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>audio</span> <span class=\"token attr-name\">controls</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>source</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>../music/a.mp3<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>audio/mp3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">&lt;!-- &lt;source src=\"../music/a.ogg\" type=\"audioogg\"></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    &lt;source src=\"../music/a.wav\" type=\"audio/wav\"> --></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>audio</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure>",
            "tags": [
                "html"
            ]
        },
        {
            "id": "https://promisemey.github.io/2022/10/06/HTML/%E9%80%89%E6%8B%A9%E5%99%A8/",
            "url": "https://promisemey.github.io/2022/10/06/HTML/%E9%80%89%E6%8B%A9%E5%99%A8/",
            "title": "选择器",
            "date_published": "2022-10-06T06:07:32.000Z",
            "content_html": "<h1 id=\"一-层级选择器\"><a class=\"anchor\" href=\"#一-层级选择器\">#</a> 一、层级选择器</h1>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>e>f 选择e元素下的所有第一层f元素</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>e+f 选择e元素后面的第一个兄弟f元素(中间间隔其他元素不生效)</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>e~f 选择e元素后面的所有兄弟f元素</pre></td></tr></table></figure><h1 id=\"二-属性选择器\"><a class=\"anchor\" href=\"#二-属性选择器\">#</a> 二、属性选择器</h1>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>/* E[attr] 选择包含attr属性的所有e元素 */        </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        img[alt] &#123;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            /* width: 300px; */</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            border: 1px solid pink;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        &#125;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        /* e[attr=\"value\"]选择attr属性为value的e元素 */        </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        img[alt=\"1\"] &#123;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            border: 3px solid skyblue;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        &#125;</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        /* e[attr|=\"value\"]选择attr属性为以value[-]开头的e元素  */</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        img[alt|=\"em\"] &#123;</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            width: 400px;</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            height: 200px;</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        &#125;</pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t/* e[attr~=\"value\"]选择attr属性[多个属性值]包含value的e元素 */        </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        img[elements~=\"ele\"] &#123;</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            width: 150px;</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            height: 70px;</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            border: 2px dashed orange;</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        &#125;</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        /* e[attr^=\"value\"]选择attr属性为以value开头的e元素 */</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        /* e[attr$=\"value\"]选择attr属性为以value结尾的e元素 */</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        /* e[attr*=\"value\"]选择attr属性任意包含value的e元素 */</pre></td></tr></table></figure><h1 id=\"三-伪元素选择器\"><a class=\"anchor\" href=\"#三-伪元素选择器\">#</a> 三、伪元素选择器</h1>\n<blockquote>\n<p><img data-src=\"C:%5CUsers%5C26366%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1663644178749.png\" alt=\"1663644178749\" /></p>\n</blockquote>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\"></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\">/* 选中文本 */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token selector\">p::selection</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> skyblue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> pink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\">/* 选中第一个文字 */</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token selector\">p::first-letter</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> skyblue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">/* 选中第一行 */</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token selector\">p::first-line</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 12px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\">/* 为 placeholder 加样式 */</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token selector\">input::-webkit-input-placeholder</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> aliceblue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> antiquewhite<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token comment\">/* 动态伪类选择器:focus */</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token comment\">/* 获取焦点 */</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token comment\">/* 只写:focus   为全部能够获取焦点的元素加上样式 */</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token selector\">input:focus</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token property\">outline-color</span><span class=\"token punctuation\">:</span> aqua<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>赛季末巅峰榜变成土豪榜！大批玩家公然招募演员，演一场5W<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>search<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h1 id=\"四-结构伪类选择器\"><a class=\"anchor\" href=\"#四-结构伪类选择器\">#</a> 四、结构伪类选择器</h1>\n<p><img data-src=\"C:%5CUsers%5C26366%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1663656123702.png\" alt=\"1663656123702\" /></p>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">结构伪类选择器</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    1.f e:first-child</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token selector\">匹配父元素的第一个子元素，并且是e元素</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    2.f e:last-child</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>  <span class=\"token selector\">匹配父元素的最后一个子元素，并且是e元素</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    3.f e:nth-child(n)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token selector\">匹配父元素的第n个子元素，并且是e元素</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    4.f e:nth-last-child(n)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token selector\">匹配父元素的倒数第n个子元素，并且是e元素</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    5.f e:nth-of-type(n)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>  <span class=\"token selector\">在父元素同类型子元素中的第n个元素</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    &lt;style></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        .big div</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token property\">float</span><span class=\"token punctuation\">:</span> left<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token selector\">.big div:first-of-type</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> antiquewhite<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\">/* 倒数第 3 个盒子 */</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token selector\">.big div:nth-last-child(3)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> skyblue<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token comment\">/* 排除前两个盒子 */</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token selector\">.big div:nth-of-type(n+3)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> pink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t<span class=\"token selector\">p:only-of-type</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 400px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> coral<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token selector\">div a:only-child</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>193<span class=\"token punctuation\">,</span> 193<span class=\"token punctuation\">,</span> 245<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token comment\">/* 根元素 */</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"43\"></td><td><pre>         <span class=\"token selector\">:root</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>../img/91.png<span class=\"token punctuation\">)</span></span> center/cover no-repeat<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token comment\">/* 为内容为空的标签加样式 */</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"48\"></td><td><pre>         <span class=\"token selector\">:empty</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 400px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 400px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> aqua<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token comment\">/* 为跳转目标加样式 */</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"55\"></td><td><pre>         <span class=\"token selector\">:target</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 3px solid pink<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    &lt;/style></pre></td></tr></table></figure><blockquote>\n<p><strong>注意：</strong>  <code>-of-type</code>  类型<em>先</em>找 e 元素<strong>再</strong>排序。</p>\n</blockquote>\n<h1 id=\"五-长单词换行\"><a class=\"anchor\" href=\"#五-长单词换行\">#</a> 五、长单词换行</h1>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>word-wrap</td>\n<td>break-word</td>\n<td>保证单词完整性 (文章)</td>\n</tr>\n<tr>\n<td>word-break</td>\n<td>break-all</td>\n<td>不保证 (网址)</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"六-圆角属性\"><a class=\"anchor\" href=\"#六-圆角属性\">#</a> 六、圆角属性</h1>\n<p><code>border-radius:</code>  水平 / 垂直</p>\n<blockquote>\n<p>​      border-radius:20px 10px/30px 10px;</p>\n</blockquote>\n",
            "tags": [
                "HTML",
                "选择器"
            ]
        },
        {
            "id": "https://promisemey.github.io/2022/10/06/HTML/%E5%B8%83%E5%B1%80%E8%A1%A5%E5%85%85/",
            "url": "https://promisemey.github.io/2022/10/06/HTML/%E5%B8%83%E5%B1%80%E8%A1%A5%E5%85%85/",
            "title": "布局补充",
            "date_published": "2022-10-06T06:04:14.000Z",
            "content_html": "<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>## 五大内核</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>+ Trident  IE</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>+ gecko  火狐</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>+ webkit  苹果&amp;谷歌</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>+ blink   谷歌&amp;欧朋</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>+ presto  欧朋</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>## fieldset</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>+ 表单信息分组</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>+ legend 分组名称</pre></td></tr></table></figure><blockquote>\n<p>精灵图优点：<br />\n减少服务器发送次数，减轻服务器压力，提高页面加载速度<br />\n文字阴影:text-shadow 可以多层叠加<br />\n 1.h-shadow  水平偏移量<br />\n 2.v-shadow  垂直偏移量<br />\n 3.blur      可选，模糊度<br />\n 4.color     可选，阴影颜色<br />\n盒子阴影:box-shadow<br />\n1.h-shadow<br />\n2.v-shadow<br />\n3.blur    模糊度<br />\n 4.spread  阴影扩大<br />\n 5.color<br />\n6.inset   内部阴影<br />\n seo：搜索引擎优化<br />\n三大标签<br />\n title,description 网页描述标签，keywords 关键词</p>\n<p>ico 图标设置：<br />\n&lt;link rel=&quot;shortcut icon&quot; href=&quot;&quot; type=&quot;image/x-icon&quot;&gt;<br />\n 版心：container,wrapper</p>\n<p>css 书写顺序：<br />\n1. 布局属性:display,position,float,clear,visibility,overflow;<br />\n2. 盒子模型 + 背景:width,height,margin,padding,border,background;<br />\n3. 文本属性:color,font,text-decoration,text-align,line-height;<br />\n4. 点缀属性:cursor,border-radius,text-shadow,box-shadow;</p>\n</blockquote>\n",
            "tags": [
                "HTML",
                "布局",
                "html"
            ]
        },
        {
            "id": "https://promisemey.github.io/2022/10/06/HTML/html%E6%A0%87%E7%AD%BE%E8%A1%A5%E5%85%85/",
            "url": "https://promisemey.github.io/2022/10/06/HTML/html%E6%A0%87%E7%AD%BE%E8%A1%A5%E5%85%85/",
            "title": "Html标签2",
            "date_published": "2022-10-06T05:50:52.000Z",
            "content_html": "<h1 id=\"day2\"><a class=\"anchor\" href=\"#day2\">#</a> DAY2</h1>\n<h2 id=\"外部引入样式表的方式面试题\"><a class=\"anchor\" href=\"#外部引入样式表的方式面试题\">#</a> 外部引入样式表的方式（面试题）</h2>\n<ol>\n<li>外链式</li>\n</ol>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- 外链式 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>../css/demo.css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><ol start=\"2\">\n<li>通过下面方法</li>\n</ol>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>@import url(../css/demo.css);</pre></td></tr></table></figure><ol start=\"3\">\n<li>区别\n<ul>\n<li>link 属于 XHTML    @import 属于 css 提供的方式</li>\n<li>link 方式   会在页面加载的时候  <strong>同步加载</strong>，@import  则会在页面结构加载完毕后加载样式。</li>\n<li>兼容性：@import 仅支持 ie5 以上。</li>\n</ul>\n</li>\n</ol>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">p</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token comment\">/* 复合属性连写的 font 格式：</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            font:font-style font-weight font-size/line-height font-family; */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token comment\">/* font-size: 50px;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            font-family: serif;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            font-weight: 900;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            font-style: italic; */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token property\">font</span><span class=\"token punctuation\">:</span> oblique 900 50px/10 serif<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> overline<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token comment\">/* 文本两端对齐 */</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token comment\">/* text-align-last: justify; */</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"day4\"><a class=\"anchor\" href=\"#day4\">#</a> day4</h1>\n<h3 id=\"块标签元素\"><a class=\"anchor\" href=\"#块标签元素\">#</a> 块标签元素</h3>\n<blockquote>\n<p>p h1-h6 hr ul ol li dl dd dt form</p>\n</blockquote>\n<ul>\n<li>支持宽高，自上而下排列</li>\n<li>不受空格影响</li>\n<li>一般用于其他标签的容器</li>\n<li>默认宽度为 100%（独占一行）。</li>\n</ul>\n<h3 id=\"行内标签元素\"><a class=\"anchor\" href=\"#行内标签元素\">#</a> 行内标签元素</h3>\n<blockquote>\n<p>span i a b strong em sub sup u label br font</p>\n</blockquote>\n<ol>\n<li>不支持宽高（宽高根据内容大小自动撑开），自左向右排列</li>\n<li>受空格影响</li>\n<li>不独占一行</li>\n</ol>\n<h3 id=\"行内块标签元素\"><a class=\"anchor\" href=\"#行内块标签元素\">#</a> 行内块标签元素</h3>\n<blockquote>\n<p>img textarea input</p>\n</blockquote>\n<ol>\n<li>支持宽高，自左向右排列</li>\n<li>受空格影响</li>\n<li>不独占一行</li>\n</ol>\n<h3 id=\"文字两边对齐\"><a class=\"anchor\" href=\"#文字两边对齐\">#</a> 文字两边对齐</h3>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">text-align-last</span><span class=\"token punctuation\">:</span> justify<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"高度塌陷问题\"><a class=\"anchor\" href=\"#高度塌陷问题\">#</a> 高度塌陷问题</h1>\n<blockquote>\n<p>垂直布局的块元素中  上下的 margin 会合并  显示最大值<br />\n互相嵌套的块级元素  父子元素紧贴的 margin-top 会作用在父元素身上<br />\n导致父元素一起向下移动<br />\n解决:<br />\n1. 给父元素设置 border-top   padding-top<br />\n2. 给父元素设置 overflow:hidden<br />\n3. 转换行内块元素<br />\n 4. 设置浮动<br />\n行内元素:<br />\n1. 水平方向的 margin 和 padding 有效<br />\n 2. 垂直方向无效<br />\n结构伪类选择器<br />\n 1.e:first-child {} 匹配父元素的第一个子元素，并且是 e 元素<br />\n 2.e:last-child {}  匹配父元素的最后一个子元素，并且是 e 元素<br />\n 3.e:nth-child (n){} 匹配父元素的第 n 个子元素，并且是 e 元素<br />\n 4.e:nth-last-child (n){} 匹配父元素的倒数第 n 个子元素，并且是 e 元素<br />\n nth-of-type (n){}  在父元素同类型子元素中的第 n 个元素</p>\n</blockquote>\n<h1 id=\"清除浮动\"><a class=\"anchor\" href=\"#清除浮动\">#</a> 清除浮动</h1>\n<ol>\n<li>子元素浮动  不能撑开标准流的块级父元素</li>\n<li>不占位置</li>\n<li>需要父元素有高度  从而不影响其他网页元素布局</li>\n<li>清除浮动方法：</li>\n</ol>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>1.父元素设置高度</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            2.额外标签法（不常用）</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                2.1.在父元素内容后面添加一个块级标签</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                2.2给添加的块级元素设置clear:both</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            3.单伪元素清除（直接给标签加类）</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                3.1.</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                   .clearfix::after&#123;</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                       content:'';</pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                       display:block;</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                       clear:both</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                   &#125;</pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                3.2.</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                   .clearfix::after&#123;</pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                       content:'.';</pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                       display:block;</pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                       clear:both;</pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                       /* 补充代码 在网页中看不到伪元素 */</pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                       height:0;</pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                       visibility:hidden;</pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                   &#125;</pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            4.双伪元素(解决margin塌陷现象)</pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                4.1.</pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                   .clearfix::before,</pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                   .clearfix::after&#123;</pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                       content:'';</pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                       display:table;</pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                   &#125;</pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                   .clearfix::after&#123;</pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                       clear:both;</pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                   &#125;</pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            5.给父元素设置overflow:hidden;</pre></td></tr></table></figure>",
            "tags": [
                "HTML",
                "基本标签",
                "html"
            ]
        },
        {
            "id": "https://promisemey.github.io/2022/10/06/HTML/%E5%9F%BA%E6%9C%AC%E6%A0%87%E7%AD%BE/",
            "url": "https://promisemey.github.io/2022/10/06/HTML/%E5%9F%BA%E6%9C%AC%E6%A0%87%E7%AD%BE/",
            "title": "Html的基本标签",
            "date_published": "2022-10-06T03:05:09.000Z",
            "content_html": "<h1 id=\"标签\"><a class=\"anchor\" href=\"#标签\">#</a> 标签</h1>\n<h2 id=\"1-标题标签\"><a class=\"anchor\" href=\"#1-标题标签\">#</a> 1. 标题标签</h2>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>1级标题标签<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>2级标题标签<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">></span></span>3级标题标签<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h4</span><span class=\"token punctuation\">></span></span>4级标题标签<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h4</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h5</span><span class=\"token punctuation\">></span></span>5级标题标签<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h5</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h6</span><span class=\"token punctuation\">></span></span>6级标题标签<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h6</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"2-段落标签\"><a class=\"anchor\" href=\"#2-段落标签\">#</a> 2. 段落标签</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    今日头条是北京字节跳动科技有限公司开发的一款基于数据挖掘的推荐引擎产品，为用户推荐信息、提供连接 人与信息的服务的产品。由张一鸣于2012年3月创建，2012年8月发布第一个版本。</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><blockquote>\n<p><strong>注意：</strong> <em>段落 / 标题</em>   标签不能相互包括</p>\n</blockquote>\n<h2 id=\"3文本修饰标签\"><a class=\"anchor\" href=\"#3文本修饰标签\">#</a> 3. 文本修饰标签</h2>\n<table>\n<thead>\n<tr>\n<th>标签</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>b，strong</td>\n<td>文字加粗</td>\n</tr>\n<tr>\n<td>i，em</td>\n<td>文字倾斜</td>\n</tr>\n<tr>\n<td>del</td>\n<td>删除线</td>\n</tr>\n<tr>\n<td>sub</td>\n<td>下标</td>\n</tr>\n<tr>\n<td>sup</td>\n<td>上标</td>\n</tr>\n<tr>\n<td>u</td>\n<td>下划线</td>\n</tr>\n<tr>\n<td>br</td>\n<td>换行</td>\n</tr>\n<tr>\n<td>hr</td>\n<td>水平线</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- 文本修饰标签 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">&lt;!-- 加粗 --></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>b</span><span class=\"token punctuation\">></span></span>加粗<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>b</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">></span></span>加粗<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">&lt;!-- 倾斜 --></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>i</span><span class=\"token punctuation\">></span></span>倾斜<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>i</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>em</span><span class=\"token punctuation\">></span></span>倾斜<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>em</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">&lt;!-- 删除 --></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>del</span><span class=\"token punctuation\">></span></span>删除<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>del</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">&lt;!-- 上下标 --></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>X<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>sub</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>sub</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>sup</span><span class=\"token punctuation\">></span></span>2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>sup</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">&lt;!-- 下划线 --></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>u</span><span class=\"token punctuation\">></span></span>下划线<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>u</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><blockquote>\n<p>文本修饰符<strong>被</strong>浏览器<strong>解析</strong>为文字</p>\n</blockquote>\n<h2 id=\"4-图片\"><a class=\"anchor\" href=\"#4-图片\">#</a> 4. 图片</h2>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- 图片 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>../img/壁纸1.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>壁纸<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>壁纸<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>250px<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://img2.baidu.com/it/u=3774660051,2415734395&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=JPEG?w=500&amp;h=709<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>壁纸<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>壁纸<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>250px<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h3 id=\"img\"><a class=\"anchor\" href=\"#img\">#</a> img</h3>\n<blockquote>\n<p>src:</p>\n<ul>\n<li>绝对路径</li>\n<li>相对路径</li>\n</ul>\n<p>**../ ** 上层目录</p>\n<p><strong>./</strong>  当前目录</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>src</td>\n<td>图片链接地址</td>\n</tr>\n<tr>\n<td>alt</td>\n<td>图片损坏或不存在 显示<em>属性值</em>的提示文本</td>\n</tr>\n<tr>\n<td>title</td>\n<td>鼠标悬停显示属性值</td>\n</tr>\n<tr>\n<td>width</td>\n<td>图片宽度</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"5-超链接\"><a class=\"anchor\" href=\"#5-超链接\">#</a> 5. 超链接</h2>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- 超链接 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.baidu.com<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>_blank<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>baidu<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>baidu<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><blockquote>\n<p>**target:  **</p>\n<ul>\n<li><code>_blank:</code>  在 <strong>新</strong> 的标签页打开链接内容</li>\n<li><code>_self:</code>  在 <strong>当前</strong> 页面打开链接内</li>\n</ul>\n<p><strong>title:</strong></p>\n<ul>\n<li>鼠标悬停显示属性值</li>\n</ul>\n</blockquote>\n",
            "tags": [
                "HTML",
                "基本标签"
            ]
        },
        {
            "id": "https://promisemey.github.io/2022/10/05/js_promise/",
            "url": "https://promisemey.github.io/2022/10/05/js_promise/",
            "title": "Vue",
            "date_published": "2022-10-05T15:13:30.000Z",
            "content_html": "<p>Es6 中回调地狱等问题，以及对 async/await 的学习</p>\n<h1 id=\"模块化\"><a class=\"anchor\" href=\"#模块化\">#</a> 模块化</h1>\n<h2 id=\"es6模块规范\"><a class=\"anchor\" href=\"#es6模块规范\">#</a> ES6 模块规范</h2>\n<ol>\n<li>每个 js 文件是一个独立的模块</li>\n<li>导入其他模块成员使用  <code>import</code>  关键字</li>\n<li>向外共享使用  <code>export</code>  关键字</li>\n</ol>\n<h2 id=\"nodejs只用es6模块化\"><a class=\"anchor\" href=\"#nodejs只用es6模块化\">#</a> node.js 只用 es6 模块化</h2>\n<ol>\n<li>默认仅支持 CommonJS 模块化规范，需要配置使用</li>\n<li>安装 v14.15.1 + 版本的 node.js</li>\n<li>在 package.json 的根节点中添加  <code>&quot;type&quot;:&quot;module&quot;</code>  节点</li>\n</ol>\n<h2 id=\"基本语法\"><a class=\"anchor\" href=\"#基本语法\">#</a> 基本语法</h2>\n<ol>\n<li>\n<p>默认导入 / 导出</p>\n<ul>\n<li>导出: <code>export default 默认导出成员</code></li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">let</span> n1 <span class=\"token operator\">=</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">let</span> n2 <span class=\"token operator\">=</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'我是默认导出文件'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    n1<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    show</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>导入: <code> import 接收名称 from '模块名称'</code></li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> ex <span class=\"token keyword\">from</span> <span class=\"token string\">'./1.默认导出.js'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li><strong>注意！！！</strong>  每个模块中只允许使用一次默认导出</li>\n</ul>\n</li>\n<li>\n<p>按需导出</p>\n<ul>\n<li>导出</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">let</span> s1 <span class=\"token operator\">=</span> <span class=\"token string\">'aaa'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">let</span> s2 <span class=\"token operator\">=</span> <span class=\"token string\">'ccc'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>导入</li>\n</ul>\n<ol>\n<li>可以使用 as 关键字重命名</li>\n<li>可以和默认导出一起使用</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> s1<span class=\"token punctuation\">,</span> s2<span class=\"token punctuation\">,</span> say <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./3.按需导出.js'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>s2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>say<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> info<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> s1<span class=\"token punctuation\">,</span> s2<span class=\"token punctuation\">,</span> say <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./3.按需导出.js'</span></pre></td></tr></table></figure></li>\n<li>\n<p>直接导入运行</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 5. 直接运行.js</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 6.test.js</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">'./5.直接运行.js'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// node 6.test.js</span></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"promise\"><a class=\"anchor\" href=\"#promise\">#</a> Promise</h1>\n<h2 id=\"1回调地狱\"><a class=\"anchor\" href=\"#1回调地狱\">#</a> 1. 回调地狱</h2>\n<ol>\n<li>多层回调函数的相互嵌套，就形成了回调地狱。</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 地狱回调</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  <span class=\"token comment\">// 第一层</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'武林要以和为贵'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  <span class=\"token comment\">// 第二程</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'要讲武德'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>   <span class=\"token comment\">// 第三层</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'不要搞窝里斗'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>缺点:\n<ul>\n<li>代码耦合性太强，难以维护</li>\n<li>可读性差，大量冗余代码相互嵌套</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"2基本概念\"><a class=\"anchor\" href=\"#2基本概念\">#</a> 2. 基本概念</h2>\n<ol>\n<li><code>Promise</code> \t是一个构造函数\n<ul>\n<li>创建  <code>Promise</code>  实例  <code>const p =  new Promise()</code></li>\n<li>new 出来的 Promise 实例对象，代表一个异步操作</li>\n</ul>\n</li>\n<li><code>Promise.prototype</code>  上包含一个.then () 方法\n<ul>\n<li>每次 new Promise () 构造函数得到的实例对象，都可以 <em>通过原型链的方式</em>   访问   <code>.then()</code>   方法</li>\n</ul>\n</li>\n<li><code>.then()</code>   方法用来预先指定成功和失败的回调函数</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>p<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>成功<span class=\"token punctuation\">,</span>失败<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>p<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span><span class=\"token operator\">=></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token parameter\">error</span><span class=\"token operator\">=></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 调用.then () 方法是，成功的回调函数是必选的，失败的回调函数是可选的</span></pre></td></tr></table></figure><ol start=\"4\">\n<li>\n<p><code>.then()</code>  方法的新特性</p>\n<ul>\n<li>node.js 官方提供的 fs 模块仅支持以回调函数的方式读取文件，不支持 Promise 的调用方式，因此，需要安装  <code>then-fs</code>  包</li>\n<li><code>then-fs</code>  提供  <code>readFile()</code>  方法，返回值是 Promise 对象</li>\n<li>如果上一个  <code>.then()</code>  方法中返回来了一个新的 Promise 实例对象，则可以通过下一个  <code>.then()</code>  继续进行处理.</li>\n</ul>\n<pre><code class=\"language-.js\">import thenFs from 'then-fs'\nthenFs.readFile('./file/1.txt', 'utf-8').then(r1 =&gt; &#123;\n    console.log(r1)\n    return thenFs.readFile('./file/2.txt', 'utf-8')\n&#125;).then(r2 =&gt; &#123;\n    console.log(r2)\n    return thenFs.readFile('./file/3.txt', 'utf-8')\n&#125;).then(r3 =&gt; &#123;\n    console.log(r3);\n&#125;)\n</code></pre>\n</li>\n<li>\n<p><code>.catch()</code>  捕获异常</p>\n<pre><code class=\"language-.js\">thenFs.readFile('./file/1.txt', 'utf-8').then(r1 =&gt; &#123;\n    console.log(r1)\n    return thenFs.readFile('./file/2.txt', 'utf-8')\n&#125;).then(r2 =&gt; &#123;\n    console.log(r2)\n    return thenFs.readFile('./file/3.txt', 'utf-8')\n&#125;).then(r3 =&gt; &#123;\n    console.log(r3);\n&#125;).catch(err =&gt; &#123;\n    console.log(err);\n&#125;)\n</code></pre>\n</li>\n<li>\n<p><code>.all()</code></p>\n<ul>\n<li><code>Promise.all()</code>  方法会发起并行的  <code>Promise</code>  异步操作，等所有的异步操作全部结束后才会执行下一步的  <code>.then()</code>  操作 (等待机制)</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 存放三个度文件的异步操作</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> promiseArr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    thenFs<span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./file/1.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    thenFs<span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./file/2.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    thenFs<span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./file/3.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 将 Promise 的数组，作为 Promise.all () 的参数</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span>promiseArr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">[</span>r1<span class=\"token punctuation\">,</span> r2<span class=\"token punctuation\">,</span> r3<span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 所有文件读取成功 (等待机制)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>r1<span class=\"token punctuation\">,</span> r2<span class=\"token punctuation\">,</span> r3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n<li>\n<p><code>Promise.race()</code></p>\n<ul>\n<li>也是会发起并行的  <code>Promise</code>  异步操作，只要有任何一个一部操作完成，就立即执行下一步的  <code>.then()</code>  操作 (赛跑机制)</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Promise<span class=\"token punctuation\">.</span><span class=\"token function\">race</span><span class=\"token punctuation\">(</span>promiseArr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">rs</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 所有文件读取成功 (等待机制)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n<li>\n<p>基于 Promise 封装文件读取函数</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> fs <span class=\"token keyword\">from</span> <span class=\"token string\">'fs'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">getfile</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fPath</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">//resolve 形参：调用 getfile 方法时，通过 .then () 指定的 成功的 回调函数</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">//reject  形参：调用 getfile 方法时，通过 .then () 指定的 失败的 回调函数</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span>fPath<span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> dataStr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>dataStr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token function\">getfile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./file/2.txt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">rs</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"asyncawait\"><a class=\"anchor\" href=\"#asyncawait\">#</a> async/await</h1>\n<ol>\n<li>第一个  <code>await</code>  之前的代码会<strong>同步</strong>执行， <code>await</code>  之后的代码<strong>异步</strong>执行</li>\n<li>如果调用的某个方法的返回值是 Promise 对象，则前面可以添加 await，await 只能用在被 async 修饰的方法中</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> fs <span class=\"token keyword\">from</span> <span class=\"token string\">'then-fs'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getfile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">const</span> r1 <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./file/1.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">const</span> r2 <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./file/2.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">const</span> r3 <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./file/3.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>r1<span class=\"token punctuation\">,</span> r2<span class=\"token punctuation\">,</span> r3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'f'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token function\">getfile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">/** 执行结果</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> * a </pre></td></tr><tr><td data-num=\"19\"></td><td><pre> * c</pre></td></tr><tr><td data-num=\"20\"></td><td><pre> * b</pre></td></tr><tr><td data-num=\"21\"></td><td><pre> * d</pre></td></tr><tr><td data-num=\"22\"></td><td><pre> * e</pre></td></tr><tr><td data-num=\"23\"></td><td><pre> * 我是 111 我是 222 我是 333</pre></td></tr><tr><td data-num=\"24\"></td><td><pre> * f</pre></td></tr><tr><td data-num=\"25\"></td><td><pre> */</span></pre></td></tr></table></figure><h1 id=\"eventloop\"><a class=\"anchor\" href=\"#eventloop\">#</a>  <code>EventLoop</code></h1>\n<ol>\n<li><code>javascript</code>  是单线程语言</li>\n<li>同步任务和异步任务\n<ul>\n<li>同步任务 (synchronous)\n<ul>\n<li>非耗时任务，指的是在主线程上排队执行的那些任务</li>\n<li>只有前一个执行完毕，才能执行后一个任务</li>\n</ul>\n</li>\n<li>异步任务 (asynchronous)\n<ul>\n<li>耗时任务，异步任务由  <code>Javascript</code>  委托给宿主环境进行执行</li>\n<li>异步任务执行完毕后，会通知  <code>Javascript</code>  主线程执行异步任务的回调函数</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>同步任务和异步任务的执行过程</li>\n</ol>\n<p><img data-src=\"C:%5CUsers%5C26366%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1650892115885.png\" alt=\"1650892115885\" /></p>\n<ol start=\"4\">\n<li>\n<p>分析例题</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./file/1.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">rs</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'B'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'C'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'D'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 执行结果   A D C B</span></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"宏任务和微任务\"><a class=\"anchor\" href=\"#宏任务和微任务\">#</a> 宏任务和微任务</h1>\n<blockquote>\n<p>异步任务又分为 <strong>宏任务</strong> 和 <strong>微任务</strong></p>\n</blockquote>\n<h2 id=\"1宏任务-macrotask\"><a class=\"anchor\" href=\"#1宏任务-macrotask\">#</a> 1. 宏任务 (macrotask)</h2>\n<ul>\n<li>异步 Ajax 请求</li>\n<li><code>setTImeout</code> 、 <code>setInterval</code></li>\n<li>文件操作</li>\n<li>其他宏任务</li>\n</ul>\n<h2 id=\"2微任务\"><a class=\"anchor\" href=\"#2微任务\">#</a> 2. 微任务</h2>\n<ul>\n<li><code>Promise.then</code> 、 <code>.catch</code> 、 <code>.finally</code></li>\n<li><code>process.nextTick</code></li>\n<li>其它微任务</li>\n</ul>\n<p><img data-src=\"C:%5CUsers%5C26366%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1650892917215.png\" alt=\"1650892917215\" /></p>\n<h2 id=\"3执行顺序\"><a class=\"anchor\" href=\"#3执行顺序\">#</a> 3. 执行顺序</h2>\n<blockquote>\n<p>每个宏任务执行完毕之后，会去检查是否有微任务，如果有则会执行完<strong>所有微任务</strong>，然后再去执行下一个宏任务</p>\n</blockquote>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">rs</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">// 执行结果  2  4  3  1</span></pre></td></tr></table></figure><blockquote>\n<p>例题 2</p>\n</blockquote>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./file/1.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">rs</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'B'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 宏任务 执行 读取时间可能为 >4ms 8</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'C'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 宏任务 执行 7</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'D'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 同步任务  执行 2</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 宏任务 立即执行 延迟可能 (延迟>=1ms || 延迟 & lt;5ms)      6  </span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 同步任务  执行 3</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">rs</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 微任务   执行 5</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 同步任务  执行 4</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">// 执行结果   A D 2 4 3 1 B C</span></pre></td></tr></table></figure><blockquote>\n<p>例题 3</p>\n</blockquote>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 同步任务</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 宏任务</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 同步任务</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 同步任务</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">rs</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 微任务</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 同步任务</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">rs</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 微任务</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">// 宏任务</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 同步任务</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 同步任务</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">rs</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 微任务</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\">// 1 5 6 2 3 4 7 8 9</span></pre></td></tr></table></figure><h1 id=\"api接口\"><a class=\"anchor\" href=\"#api接口\">#</a> Api 接口</h1>\n",
            "tags": [
                "Vue",
                "Javascript",
                "js"
            ]
        },
        {
            "id": "https://promisemey.github.io/2022/10/05/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/",
            "url": "https://promisemey.github.io/2022/10/05/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/",
            "title": "置顶文章",
            "date_published": "2022-10-05T15:13:30.000Z",
            "content_html": "<p>Es6 中回调地狱等问题，以及对 async/await 的学习</p>\n<h1 id=\"模块化\"><a class=\"anchor\" href=\"#模块化\">#</a> 模块化</h1>\n<h2 id=\"es6模块规范\"><a class=\"anchor\" href=\"#es6模块规范\">#</a> ES6 模块规范</h2>\n<ol>\n<li>每个 js 文件是一个独立的模块</li>\n<li>导入其他模块成员使用  <code>import</code>  关键字</li>\n<li>向外共享使用  <code>export</code>  关键字</li>\n</ol>\n<h2 id=\"nodejs只用es6模块化\"><a class=\"anchor\" href=\"#nodejs只用es6模块化\">#</a> node.js 只用 es6 模块化</h2>\n<ol>\n<li>默认仅支持 CommonJS 模块化规范，需要配置使用</li>\n<li>安装 v14.15.1 + 版本的 node.js</li>\n<li>在 package.json 的根节点中添加  <code>&quot;type&quot;:&quot;module&quot;</code>  节点</li>\n</ol>\n<h2 id=\"基本语法\"><a class=\"anchor\" href=\"#基本语法\">#</a> 基本语法</h2>\n<ol>\n<li>\n<p>默认导入 / 导出</p>\n<ul>\n<li>导出: <code>export default 默认导出成员</code></li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">let</span> n1 <span class=\"token operator\">=</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">let</span> n2 <span class=\"token operator\">=</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'我是默认导出文件'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    n1<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    show</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>导入: <code> import 接收名称 from '模块名称'</code></li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> ex <span class=\"token keyword\">from</span> <span class=\"token string\">'./1.默认导出.js'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li><strong>注意！！！</strong>  每个模块中只允许使用一次默认导出</li>\n</ul>\n</li>\n<li>\n<p>按需导出</p>\n<ul>\n<li>导出</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">let</span> s1 <span class=\"token operator\">=</span> <span class=\"token string\">'aaa'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">let</span> s2 <span class=\"token operator\">=</span> <span class=\"token string\">'ccc'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>导入</li>\n</ul>\n<ol>\n<li>可以使用 as 关键字重命名</li>\n<li>可以和默认导出一起使用</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> s1<span class=\"token punctuation\">,</span> s2<span class=\"token punctuation\">,</span> say <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./3.按需导出.js'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>s2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>say<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> info<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> s1<span class=\"token punctuation\">,</span> s2<span class=\"token punctuation\">,</span> say <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./3.按需导出.js'</span></pre></td></tr></table></figure></li>\n<li>\n<p>直接导入运行</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 5. 直接运行.js</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 6.test.js</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">'./5.直接运行.js'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// node 6.test.js</span></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"promise\"><a class=\"anchor\" href=\"#promise\">#</a> Promise</h1>\n<h2 id=\"1回调地狱\"><a class=\"anchor\" href=\"#1回调地狱\">#</a> 1. 回调地狱</h2>\n<ol>\n<li>多层回调函数的相互嵌套，就形成了回调地狱。</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 地狱回调</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  <span class=\"token comment\">// 第一层</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'武林要以和为贵'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  <span class=\"token comment\">// 第二程</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'要讲武德'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>   <span class=\"token comment\">// 第三层</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'不要搞窝里斗'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>缺点:\n<ul>\n<li>代码耦合性太强，难以维护</li>\n<li>可读性差，大量冗余代码相互嵌套</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"2基本概念\"><a class=\"anchor\" href=\"#2基本概念\">#</a> 2. 基本概念</h2>\n<ol>\n<li><code>Promise</code> \t是一个构造函数\n<ul>\n<li>创建  <code>Promise</code>  实例  <code>const p =  new Promise()</code></li>\n<li>new 出来的 Promise 实例对象，代表一个异步操作</li>\n</ul>\n</li>\n<li><code>Promise.prototype</code>  上包含一个.then () 方法\n<ul>\n<li>每次 new Promise () 构造函数得到的实例对象，都可以 <em>通过原型链的方式</em>   访问   <code>.then()</code>   方法</li>\n</ul>\n</li>\n<li><code>.then()</code>   方法用来预先指定成功和失败的回调函数</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>p<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>成功<span class=\"token punctuation\">,</span>失败<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>p<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span><span class=\"token operator\">=></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token parameter\">error</span><span class=\"token operator\">=></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 调用.then () 方法是，成功的回调函数是必选的，失败的回调函数是可选的</span></pre></td></tr></table></figure><ol start=\"4\">\n<li>\n<p><code>.then()</code>  方法的新特性</p>\n<ul>\n<li>node.js 官方提供的 fs 模块仅支持以回调函数的方式读取文件，不支持 Promise 的调用方式，因此，需要安装  <code>then-fs</code>  包</li>\n<li><code>then-fs</code>  提供  <code>readFile()</code>  方法，返回值是 Promise 对象</li>\n<li>如果上一个  <code>.then()</code>  方法中返回来了一个新的 Promise 实例对象，则可以通过下一个  <code>.then()</code>  继续进行处理.</li>\n</ul>\n<pre><code class=\"language-.js\">import thenFs from 'then-fs'\nthenFs.readFile('./file/1.txt', 'utf-8').then(r1 =&gt; &#123;\n    console.log(r1)\n    return thenFs.readFile('./file/2.txt', 'utf-8')\n&#125;).then(r2 =&gt; &#123;\n    console.log(r2)\n    return thenFs.readFile('./file/3.txt', 'utf-8')\n&#125;).then(r3 =&gt; &#123;\n    console.log(r3);\n&#125;)\n</code></pre>\n</li>\n<li>\n<p><code>.catch()</code>  捕获异常</p>\n<pre><code class=\"language-.js\">thenFs.readFile('./file/1.txt', 'utf-8').then(r1 =&gt; &#123;\n    console.log(r1)\n    return thenFs.readFile('./file/2.txt', 'utf-8')\n&#125;).then(r2 =&gt; &#123;\n    console.log(r2)\n    return thenFs.readFile('./file/3.txt', 'utf-8')\n&#125;).then(r3 =&gt; &#123;\n    console.log(r3);\n&#125;).catch(err =&gt; &#123;\n    console.log(err);\n&#125;)\n</code></pre>\n</li>\n<li>\n<p><code>.all()</code></p>\n<ul>\n<li><code>Promise.all()</code>  方法会发起并行的  <code>Promise</code>  异步操作，等所有的异步操作全部结束后才会执行下一步的  <code>.then()</code>  操作 (等待机制)</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 存放三个度文件的异步操作</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> promiseArr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    thenFs<span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./file/1.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    thenFs<span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./file/2.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    thenFs<span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./file/3.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 将 Promise 的数组，作为 Promise.all () 的参数</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span>promiseArr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">[</span>r1<span class=\"token punctuation\">,</span> r2<span class=\"token punctuation\">,</span> r3<span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 所有文件读取成功 (等待机制)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>r1<span class=\"token punctuation\">,</span> r2<span class=\"token punctuation\">,</span> r3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n<li>\n<p><code>Promise.race()</code></p>\n<ul>\n<li>也是会发起并行的  <code>Promise</code>  异步操作，只要有任何一个一部操作完成，就立即执行下一步的  <code>.then()</code>  操作 (赛跑机制)</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Promise<span class=\"token punctuation\">.</span><span class=\"token function\">race</span><span class=\"token punctuation\">(</span>promiseArr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">rs</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 所有文件读取成功 (等待机制)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n<li>\n<p>基于 Promise 封装文件读取函数</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> fs <span class=\"token keyword\">from</span> <span class=\"token string\">'fs'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">getfile</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fPath</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">//resolve 形参：调用 getfile 方法时，通过 .then () 指定的 成功的 回调函数</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">//reject  形参：调用 getfile 方法时，通过 .then () 指定的 失败的 回调函数</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span>fPath<span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> dataStr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>dataStr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token function\">getfile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./file/2.txt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">rs</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"asyncawait\"><a class=\"anchor\" href=\"#asyncawait\">#</a> async/await</h1>\n<ol>\n<li>第一个  <code>await</code>  之前的代码会<strong>同步</strong>执行， <code>await</code>  之后的代码<strong>异步</strong>执行</li>\n<li>如果调用的某个方法的返回值是 Promise 对象，则前面可以添加 await，await 只能用在被 async 修饰的方法中</li>\n</ol>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> fs <span class=\"token keyword\">from</span> <span class=\"token string\">'then-fs'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getfile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">const</span> r1 <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./file/1.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">const</span> r2 <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./file/2.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">const</span> r3 <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./file/3.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>r1<span class=\"token punctuation\">,</span> r2<span class=\"token punctuation\">,</span> r3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'f'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token function\">getfile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">/** 执行结果</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> * a </pre></td></tr><tr><td data-num=\"19\"></td><td><pre> * c</pre></td></tr><tr><td data-num=\"20\"></td><td><pre> * b</pre></td></tr><tr><td data-num=\"21\"></td><td><pre> * d</pre></td></tr><tr><td data-num=\"22\"></td><td><pre> * e</pre></td></tr><tr><td data-num=\"23\"></td><td><pre> * 我是 111 我是 222 我是 333</pre></td></tr><tr><td data-num=\"24\"></td><td><pre> * f</pre></td></tr><tr><td data-num=\"25\"></td><td><pre> */</span></pre></td></tr></table></figure><h1 id=\"eventloop\"><a class=\"anchor\" href=\"#eventloop\">#</a>  <code>EventLoop</code></h1>\n<ol>\n<li><code>javascript</code>  是单线程语言</li>\n<li>同步任务和异步任务\n<ul>\n<li>同步任务 (synchronous)\n<ul>\n<li>非耗时任务，指的是在主线程上排队执行的那些任务</li>\n<li>只有前一个执行完毕，才能执行后一个任务</li>\n</ul>\n</li>\n<li>异步任务 (asynchronous)\n<ul>\n<li>耗时任务，异步任务由  <code>Javascript</code>  委托给宿主环境进行执行</li>\n<li>异步任务执行完毕后，会通知  <code>Javascript</code>  主线程执行异步任务的回调函数</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>同步任务和异步任务的执行过程</li>\n</ol>\n<p><img data-src=\"C:%5CUsers%5C26366%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1650892115885.png\" alt=\"1650892115885\" /></p>\n<ol start=\"4\">\n<li>\n<p>分析例题</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./file/1.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">rs</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'B'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'C'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'D'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 执行结果   A D C B</span></pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"宏任务和微任务\"><a class=\"anchor\" href=\"#宏任务和微任务\">#</a> 宏任务和微任务</h1>\n<blockquote>\n<p>异步任务又分为 <strong>宏任务</strong> 和 <strong>微任务</strong></p>\n</blockquote>\n<h2 id=\"1宏任务-macrotask\"><a class=\"anchor\" href=\"#1宏任务-macrotask\">#</a> 1. 宏任务 (macrotask)</h2>\n<ul>\n<li>异步 Ajax 请求</li>\n<li><code>setTImeout</code> 、 <code>setInterval</code></li>\n<li>文件操作</li>\n<li>其他宏任务</li>\n</ul>\n<h2 id=\"2微任务\"><a class=\"anchor\" href=\"#2微任务\">#</a> 2. 微任务</h2>\n<ul>\n<li><code>Promise.then</code> 、 <code>.catch</code> 、 <code>.finally</code></li>\n<li><code>process.nextTick</code></li>\n<li>其它微任务</li>\n</ul>\n<p><img data-src=\"C:%5CUsers%5C26366%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1650892917215.png\" alt=\"1650892917215\" /></p>\n<h2 id=\"3执行顺序\"><a class=\"anchor\" href=\"#3执行顺序\">#</a> 3. 执行顺序</h2>\n<blockquote>\n<p>每个宏任务执行完毕之后，会去检查是否有微任务，如果有则会执行完<strong>所有微任务</strong>，然后再去执行下一个宏任务</p>\n</blockquote>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">rs</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">// 执行结果  2  4  3  1</span></pre></td></tr></table></figure><blockquote>\n<p>例题 2</p>\n</blockquote>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./file/1.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">rs</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'B'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 宏任务 执行 读取时间可能为 >4ms 8</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'C'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 宏任务 执行 7</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'D'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 同步任务  执行 2</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 宏任务 立即执行 延迟可能 (延迟>=1ms || 延迟 & lt;5ms)      6  </span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 同步任务  执行 3</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">rs</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 微任务   执行 5</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 同步任务  执行 4</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">// 执行结果   A D 2 4 3 1 B C</span></pre></td></tr></table></figure><blockquote>\n<p>例题 3</p>\n</blockquote>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 同步任务</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 宏任务</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 同步任务</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 同步任务</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">rs</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 微任务</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 同步任务</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">rs</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 微任务</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">// 宏任务</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 同步任务</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 同步任务</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">rs</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 微任务</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\">// 1 5 6 2 3 4 7 8 9</span></pre></td></tr></table></figure><h1 id=\"api接口\"><a class=\"anchor\" href=\"#api接口\">#</a> Api 接口</h1>\n",
            "tags": [
                "js"
            ]
        },
        {
            "id": "https://promisemey.github.io/2022/10/05/hello-world/",
            "url": "https://promisemey.github.io/2022/10/05/hello-world/",
            "title": "Hello World",
            "date_published": "2022-10-05T12:15:34.778Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub</span>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo new <span class=\"token string\">\"My New Post\"</span></pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo server</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo generate</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo deploy</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": []
        }
    ]
}